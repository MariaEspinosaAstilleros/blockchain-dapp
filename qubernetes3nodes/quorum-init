#!/usr/bin/env ruby

require "yaml"
require "erb"

@config                = YAML.load_file("qubernetes.yaml")
# Generate deployments in a single file, or in separate files.
@sep_deployment_files=false
if @config["sep_deployment_files"] != nil
  @sep_deployment_files = @config["sep_deployment_files"]
end

if File.directory?("out")
  puts("\n The 'out' directory already exist.")
  puts(" Please select the action you wish to take:")
  puts("")
  puts(" [1] Delete the 'out' directory and generate new resources.")
  puts(" [2] Update / add nodes that don't already exist.")
  puts(" [3] Cancel.")
  res = gets
  res = res.strip
  case res
  when "1"
    puts("Creating all new resources.")
    `rm -r out`
  when "2"
    puts("Generating additional resources only.")
  when "3"
    puts("OK, bye :)")
    exit(0)
  else
    puts("OK, not doing anything :)")
    exit(0)
  end
end

`
# create the output directory if
# it doesn't exist
mkdir -p out/config

# generate the nodes.yaml
# file for the set number of
# nodes.
./quorum-create-nodes

`
puts ""
puts "  Generating keys..."
`
# generate the keygen script
# to generate nodekey, account keys, and
# quorum transaction manger (tm.pub,tm.key) keys.
./quorum-keygen
`

puts "  Generating Quorum configs..."
`
# generate the appropriate config files:
#   permissioned-nodes.json
#   genesis.json 
./quorum-config
`

puts ""
puts  "  Base quorum resources have been generated. "
puts  "  Running ./qubernetes to generate Kubernetes resources."
puts ""
`
./qubernetes
`
@Kubectl_Cmd="  $> kubectl apply -f out"
if @sep_deployment_files
  @Kubectl_Cmd="  $> kubectl apply -f out -f out/deployments"
end
puts("  To deploy to kubernetes run:")
puts(@Kubectl_Cmd)

